/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;
import code.*;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author AlisonGonzalez
 */
public class Main extends javax.swing.JFrame {

    public double round(double n){
        double roundOff = Math.round(n * 10000.0) / 10000.0;
        return roundOff;
    }
    
    private boolean isNumber(String number) {
        try {
            Integer.parseInt(number);
            return isNumberPositive(Integer.parseInt(number));
        } catch (NumberFormatException e) {
            return false;
        }
    }
    
    private boolean isFloat(String number) {
        try {
            Double.parseDouble(number);
            return isFloatPositive(Double.parseDouble(number));
        } catch (NumberFormatException e) {
            return false;
        }
    }
    
    private boolean isValidCost(String number) {
        try {
            Double.parseDouble(number);
            return isCostPositive(Double.parseDouble(number));
        } catch (NumberFormatException e) {
            return false;
        }
    }
    
    private boolean isNumberPositive(int n){
        return n >= 0;
    }
    
    private boolean isFloatPositive(double d){
        return d > 0.0;
    }
    
    private boolean isCostPositive(double d){
        return d >= 0.0;
    }
    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        setResizable(false);
        // Hide stuff
        sigmaLabel.setVisible(false);
        sigmaInput.setVisible(false);
        sLabel.setVisible(false);
        sInput.setVisible(false);
        kLabel.setVisible(false);
        kInput.setVisible(false);
        effectiveLambdaLabel.setVisible(false);
        oneMinusP0Label.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        mm1RadioButton = new javax.swing.JRadioButton();
        mmsRadioButton = new javax.swing.JRadioButton();
        mmskRadioButton = new javax.swing.JRadioButton();
        mg1RadioButton = new javax.swing.JRadioButton();
        muInput = new javax.swing.JTextField();
        muLabel = new javax.swing.JLabel();
        lambdaLabel = new javax.swing.JLabel();
        lambdaInput = new javax.swing.JTextField();
        sigmaLabel = new javax.swing.JLabel();
        sigmaInput = new javax.swing.JTextField();
        sLabel = new javax.swing.JLabel();
        sInput = new javax.swing.JTextField();
        nInput = new javax.swing.JTextField();
        nLabel = new javax.swing.JLabel();
        kLabel = new javax.swing.JLabel();
        kInput = new javax.swing.JTextField();
        calculateButton = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        cwLabel = new javax.swing.JLabel();
        cwInput = new javax.swing.JTextField();
        csInput = new javax.swing.JTextField();
        csLabel = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        TitleLabel = new javax.swing.JLabel();
        roLabel = new javax.swing.JLabel();
        lqLabel = new javax.swing.JLabel();
        lLabel = new javax.swing.JLabel();
        wqLabel = new javax.swing.JLabel();
        wLabel = new javax.swing.JLabel();
        p0Label = new javax.swing.JLabel();
        pnLabel = new javax.swing.JLabel();
        cnLabel = new javax.swing.JLabel();
        effectiveLambdaLabel = new javax.swing.JLabel();
        oneMinusP0Label = new javax.swing.JLabel();
        costLabel = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(41, 45, 49));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/people-icon.png"))); // NOI18N

        buttonGroup1.add(mm1RadioButton);
        mm1RadioButton.setForeground(new java.awt.Color(255, 255, 255));
        mm1RadioButton.setSelected(true);
        mm1RadioButton.setText("M/M/1");
        mm1RadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mm1RadioButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(mmsRadioButton);
        mmsRadioButton.setForeground(new java.awt.Color(255, 255, 255));
        mmsRadioButton.setText("M/M/s");
        mmsRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mmsRadioButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(mmskRadioButton);
        mmskRadioButton.setForeground(new java.awt.Color(255, 255, 255));
        mmskRadioButton.setText("M/M/s/K");
        mmskRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mmskRadioButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(mg1RadioButton);
        mg1RadioButton.setForeground(new java.awt.Color(255, 255, 255));
        mg1RadioButton.setText("M/G/1");
        mg1RadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mg1RadioButtonActionPerformed(evt);
            }
        });

        muInput.setPreferredSize(new java.awt.Dimension(80, 26));

        muLabel.setForeground(new java.awt.Color(255, 255, 255));
        muLabel.setText("μ:");

        lambdaLabel.setForeground(new java.awt.Color(255, 255, 255));
        lambdaLabel.setText("λ:");

        lambdaInput.setPreferredSize(new java.awt.Dimension(80, 26));

        sigmaLabel.setForeground(new java.awt.Color(255, 255, 255));
        sigmaLabel.setText("σ:");

        sigmaInput.setPreferredSize(new java.awt.Dimension(80, 26));
        sigmaInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sigmaInputActionPerformed(evt);
            }
        });

        sLabel.setForeground(new java.awt.Color(255, 255, 255));
        sLabel.setText("s:");

        sInput.setPreferredSize(new java.awt.Dimension(80, 26));
        sInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sInputActionPerformed(evt);
            }
        });

        nInput.setPreferredSize(new java.awt.Dimension(80, 26));

        nLabel.setForeground(new java.awt.Color(255, 255, 255));
        nLabel.setText("n:");

        kLabel.setForeground(new java.awt.Color(255, 255, 255));
        kLabel.setText("K:");

        kInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kInputActionPerformed(evt);
            }
        });

        calculateButton.setText("Calcular");
        calculateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateButtonActionPerformed(evt);
            }
        });

        cwLabel.setForeground(new java.awt.Color(255, 255, 255));
        cwLabel.setText("Cw:");

        cwInput.setMinimumSize(new java.awt.Dimension(80, 26));

        csInput.setMinimumSize(new java.awt.Dimension(80, 26));
        csInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                csInputActionPerformed(evt);
            }
        });

        csLabel.setForeground(new java.awt.Color(255, 255, 255));
        csLabel.setText("Cs:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(nLabel)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lambdaLabel)
                                            .addComponent(muLabel))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(sigmaInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(nInput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lambdaInput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(muInput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(kLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(kInput))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(sLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(sInput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(jLabel1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cwLabel)
                                    .addComponent(csLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cwInput, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                                    .addComponent(csInput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator3)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(mmsRadioButton)
                                    .addComponent(mm1RadioButton)
                                    .addComponent(mmskRadioButton)
                                    .addComponent(mg1RadioButton)
                                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(15, 15, 15)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(calculateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(19, 19, 19))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(sigmaLabel)
                .addGap(152, 152, 152))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mm1RadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mmsRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mmskRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mg1RadioButton)
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(muInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(muLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lambdaLabel)
                    .addComponent(lambdaInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sigmaInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sigmaLabel))
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(kLabel)
                    .addComponent(kInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cwLabel)
                    .addComponent(cwInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(csInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(csLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(calculateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        TitleLabel.setFont(new java.awt.Font("Apple Braille", 0, 24)); // NOI18N
        TitleLabel.setText("Simulador de Modelos de Filas de Espera");

        roLabel.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        roLabel.setText("ρ:");

        lqLabel.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        lqLabel.setText("Lq:");

        lLabel.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        lLabel.setText("L:");

        wqLabel.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        wqLabel.setText("Wq:");

        wLabel.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        wLabel.setText("W:");

        p0Label.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        p0Label.setText("P0:");

        pnLabel.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        pnLabel.setText("Pn:");

        cnLabel.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        cnLabel.setText("Cn:");

        effectiveLambdaLabel.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        effectiveLambdaLabel.setText("λe:");

        oneMinusP0Label.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        oneMinusP0Label.setText("1 - P0:");

        costLabel.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        costLabel.setText("CT:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(effectiveLambdaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(97, 97, 97)
                                .addComponent(oneMinusP0Label, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(TitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(wqLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                                            .addComponent(lqLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(roLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(p0Label, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)))
                                    .addGap(90, 90, 90)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(pnLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(cnLabel, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(lLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(wLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE))))
                                .addComponent(jSeparator5)
                                .addComponent(jSeparator6)
                                .addComponent(jSeparator7))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(257, 257, 257)
                        .addComponent(costLabel)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lqLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                    .addComponent(lLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(48, 48, 48)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wqLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(wLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(pnLabel)
                        .addGap(28, 28, 28)
                        .addComponent(cnLabel)
                        .addGap(45, 45, 45)
                        .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(costLabel)
                        .addGap(35, 35, 35)
                        .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(effectiveLambdaLabel)
                            .addComponent(oneMinusP0Label))
                        .addGap(57, 57, 57))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(roLabel)
                        .addGap(24, 24, 24)
                        .addComponent(p0Label, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mmsRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mmsRadioButtonActionPerformed
        // TODO add your handling code here:
        muInput.setText("");
        lambdaInput.setText("");
        nInput.setText("");
        cwInput.setText("");
        csInput.setText("");
        
        sLabel.setVisible(true);
        sInput.setVisible(true);
        sInput.setText("");
        
        sigmaLabel.setVisible(false);
        sigmaInput.setVisible(false);
        
        kLabel.setVisible(false);
        kInput.setVisible(false);
        
        effectiveLambdaLabel.setVisible(false);
        oneMinusP0Label.setVisible(false);
    }//GEN-LAST:event_mmsRadioButtonActionPerformed

    private void kInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kInputActionPerformed

    private void mm1RadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mm1RadioButtonActionPerformed
        // TODO add your handling code here:
        muInput.setText("");
        lambdaInput.setText("");
        nInput.setText("");
        cwInput.setText("");
        csInput.setText("");
        
        sigmaLabel.setVisible(false);
        sigmaInput.setVisible(false);
        
        sLabel.setVisible(false);
        sInput.setVisible(false);
        
        kLabel.setVisible(false);
        kInput.setVisible(false);
        
        effectiveLambdaLabel.setVisible(false);
        oneMinusP0Label.setVisible(false);
    }//GEN-LAST:event_mm1RadioButtonActionPerformed

    private void sigmaInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sigmaInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sigmaInputActionPerformed

    private void sInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sInputActionPerformed

    private void calculateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateButtonActionPerformed
        // TODO add your handling code here:
        Double mu = 0.0, lambda = 0.0, sigma = 0.0, cw = 0.0, cs = 0.0, ct = 0.0;
        int n = 0, k = 0, s = 0;
        if (mm1RadioButton.isSelected()) {
            if(isFloat(muInput.getText()) &&
                    isFloat(lambdaInput.getText()) &&
                    isNumber(nInput.getText()) &&
                    isValidCost(cwInput.getText()) &&
                    isValidCost(csInput.getText())) {
                mu = Double.parseDouble(muInput.getText());
                lambda = Double.parseDouble(lambdaInput.getText());
                n = Integer.parseInt(nInput.getText());
                cw = Double.parseDouble(cwInput.getText());
                cs = Double.parseDouble(csInput.getText());
                
                if(mu <= lambda){
                    JFrame frame = new JFrame("Alerta");
                    JOptionPane.showMessageDialog(frame, "El sistema no es estable.");
                } else {
                    ModelMM1 model = new ModelMM1(lambda, mu, n, cw, cs);
                    
                    lqLabel.setText("Lq: "+round(model.lq));
                    lLabel.setText("L: "+round(model.l));
                    wqLabel.setText("Wq: "+round(model.wq));
                    wLabel.setText("W: "+round(model.w));
                    
                    roLabel.setText("ρ: "+round(model.ro));
                    p0Label.setText("P0: "+round(model.p0));
                    pnLabel.setText("Pn: "+round(model.pn));
                    cnLabel.setText("Cn: "+round(model.cn));
                    
                    costLabel.setText("CT: "+round(model.ct));
                }
            } else {
                JFrame frame = new JFrame("Alerta");
                JOptionPane.showMessageDialog(frame, "El sistema sólo acepta entradas numéricas positivas."
                    + "\nNo se pueden ingresar números mayores a 2,147,483,647.");
            }  
        }
        else if(mmsRadioButton.isSelected()) {
            if(isFloat(muInput.getText()) &&
                    isFloat(lambdaInput.getText()) &&
                    isNumber(nInput.getText()) &&
                    isNumber(sInput.getText()) &&
                    isValidCost(cwInput.getText()) &&
                    isValidCost(csInput.getText())) {
                mu = Double.parseDouble(muInput.getText());
                lambda = Double.parseDouble(lambdaInput.getText());
                n = Integer.parseInt(nInput.getText());
                s = Integer.parseInt(sInput.getText());
                cw = Double.parseDouble(cwInput.getText());
                cs = Double.parseDouble(csInput.getText());
                
                if(mu*s <= lambda){
                    JFrame frame = new JFrame("Alerta");
                    JOptionPane.showMessageDialog(frame, "El sistema no es estable.");
                } else {
                    ModelMMs model = new ModelMMs(lambda, mu, n, s, cw, cs);
                    
                    lqLabel.setText("Lq: "+round(model.lq));
                    lLabel.setText("L: "+round(model.l));
                    wqLabel.setText("Wq: "+round(model.wq));
                    wLabel.setText("W: "+round(model.w));
                    
                    roLabel.setText("ρ: "+round(model.ro));
                    p0Label.setText("P0: "+round(model.p0));
                    pnLabel.setText("Pn: "+round(model.pn));
                    cnLabel.setText("Cn: "+round(model.cn));
                    
                    costLabel.setText("CT: "+round(model.ct));
                }
            } else {
                JFrame frame = new JFrame("Alerta");
                JOptionPane.showMessageDialog(frame, "El sistema sólo acepta entradas numéricas positivas."
                    + "\nNo se pueden ingresar números mayores a 2,147,483,647.");
            }
        }
        else if(mmskRadioButton.isSelected()) {
            if(isFloat(muInput.getText()) &&
                    isFloat(lambdaInput.getText()) &&
                    isNumber(nInput.getText()) &&
                    isNumber(sInput.getText()) &&
                    isNumber(kInput.getText()) &&
                    isValidCost(cwInput.getText()) &&
                    isValidCost(csInput.getText())){
                mu = Double.parseDouble(muInput.getText());
                lambda = Double.parseDouble(lambdaInput.getText());
                n = Integer.parseInt(nInput.getText());
                s = Integer.parseInt(sInput.getText());
                k = Integer.parseInt(kInput.getText());
                cw = Double.parseDouble(cwInput.getText());
                cs = Double.parseDouble(csInput.getText());
                
                if(mu*s <= lambda){
                    JFrame frame = new JFrame("Alerta");
                    JOptionPane.showMessageDialog(frame, "El sistema no es estable.");
                } else {
                    ModelMMsK model = new ModelMMsK(lambda, mu, n, s, k, cw, cs);
                    
                    lqLabel.setText("Lq: "+round(model.lq));
                    lLabel.setText("L: "+round(model.l));
                    wqLabel.setText("Wq: "+round(model.wq));
                    wLabel.setText("W: "+round(model.w));
                    
                    roLabel.setText("ρ: "+round(model.ro));
                    p0Label.setText("P0: "+round(model.p0));
                    pnLabel.setText("Pn: "+round(model.pn));
                    cnLabel.setText("Cn: "+round(model.cn));
                    
                    effectiveLambdaLabel.setText("λe: "+round(model.effectiveLambda));
                    oneMinusP0Label.setText("1 - P0: "+round(1 - model.p0));
                    
                    costLabel.setText("CT: "+round(model.ct));
                }
                
            } else {
                JFrame frame = new JFrame("Alerta");
                JOptionPane.showMessageDialog(frame, "El sistema sólo acepta entradas numéricas positivas."
                    + "\nNo se pueden ingresar números mayores a 2,147,483,647.");
            }
            
        }
        else if (mg1RadioButton.isSelected()) {
            if(isFloat(muInput.getText()) &&
                    isFloat(lambdaInput.getText()) &&
                    isNumber(nInput.getText()) &&
                    isFloat(sigmaInput.getText()) &&
                    isValidCost(cwInput.getText()) &&
                    isValidCost(csInput.getText())) {
                mu = Double.parseDouble(muInput.getText());
                lambda = Double.parseDouble(lambdaInput.getText());
                n = Integer.parseInt(nInput.getText());
                sigma = Double.parseDouble(sigmaInput.getText());
                cw = Double.parseDouble(cwInput.getText());
                cs = Double.parseDouble(csInput.getText());
                
                if(mu <= lambda){
                    JFrame frame = new JFrame("Alerta");
                    JOptionPane.showMessageDialog(frame, "El sistema no es estable.");
                } else {
                    ModelMG1 model = new ModelMG1(lambda, mu, n, sigma, cw, cs);
                    
                    lqLabel.setText("Lq: "+round(model.lq));
                    lLabel.setText("L: "+round(model.l));
                    wqLabel.setText("Wq: "+round(model.wq));
                    wLabel.setText("W: "+round(model.w));
                    
                    roLabel.setText("ρ: "+round(model.ro));
                    p0Label.setText("P0: "+round(model.p0));
                    pnLabel.setText("Pn: "+round(model.pn));
                    cnLabel.setText("Cn: "+round(model.cn));
                    
                    costLabel.setText("CT: "+round(model.ct));
                }
            } else {
                JFrame frame = new JFrame("Alerta");
                JOptionPane.showMessageDialog(frame, "El sistema sólo acepta entradas numéricas positivas."
                    + "\nNo se pueden ingresar números mayores a 2,147,483,647.");
            } 
        }
        
    }//GEN-LAST:event_calculateButtonActionPerformed

    private void mmskRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mmskRadioButtonActionPerformed
        // TODO add your handling code here:
        muInput.setText("");
        lambdaInput.setText("");
        nInput.setText("");
        cwInput.setText("");
        csInput.setText("");
        
        sigmaLabel.setVisible(false);
        sigmaInput.setVisible(false);
        
        sLabel.setVisible(true);
        sInput.setVisible(true);
        sInput.setText("");
        
        kLabel.setVisible(true);
        kInput.setVisible(true);
        kInput.setText("");
        
        effectiveLambdaLabel.setVisible(true);
        oneMinusP0Label.setVisible(true);
    }//GEN-LAST:event_mmskRadioButtonActionPerformed

    private void mg1RadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mg1RadioButtonActionPerformed
        // TODO add your handling code here:
        muInput.setText("");
        lambdaInput.setText("");
        nInput.setText("");
        cwInput.setText("");
        csInput.setText("");
        
        sigmaLabel.setVisible(true);
        sigmaInput.setVisible(true);
        sigmaInput.setText("");
        
        sLabel.setVisible(false);
        sInput.setVisible(false);
        
        kLabel.setVisible(false);
        kInput.setVisible(false);
        
        effectiveLambdaLabel.setVisible(false);
        oneMinusP0Label.setVisible(false);
    }//GEN-LAST:event_mg1RadioButtonActionPerformed

    private void csInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_csInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_csInputActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel TitleLabel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton calculateButton;
    private javax.swing.JLabel cnLabel;
    private javax.swing.JLabel costLabel;
    private javax.swing.JTextField csInput;
    private javax.swing.JLabel csLabel;
    private javax.swing.JTextField cwInput;
    private javax.swing.JLabel cwLabel;
    private javax.swing.JLabel effectiveLambdaLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JTextField kInput;
    private javax.swing.JLabel kLabel;
    private javax.swing.JLabel lLabel;
    private javax.swing.JTextField lambdaInput;
    private javax.swing.JLabel lambdaLabel;
    private javax.swing.JLabel lqLabel;
    private javax.swing.JRadioButton mg1RadioButton;
    private javax.swing.JRadioButton mm1RadioButton;
    private javax.swing.JRadioButton mmsRadioButton;
    private javax.swing.JRadioButton mmskRadioButton;
    private javax.swing.JTextField muInput;
    private javax.swing.JLabel muLabel;
    private javax.swing.JTextField nInput;
    private javax.swing.JLabel nLabel;
    private javax.swing.JLabel oneMinusP0Label;
    private javax.swing.JLabel p0Label;
    private javax.swing.JLabel pnLabel;
    private javax.swing.JLabel roLabel;
    private javax.swing.JTextField sInput;
    private javax.swing.JLabel sLabel;
    private javax.swing.JTextField sigmaInput;
    private javax.swing.JLabel sigmaLabel;
    private javax.swing.JLabel wLabel;
    private javax.swing.JLabel wqLabel;
    // End of variables declaration//GEN-END:variables
}
